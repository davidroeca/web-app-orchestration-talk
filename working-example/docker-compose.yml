version: "3.6"
services:
  nginx:
    restart: always
    build: ./nginx
    ports:
      - "80:80"
      - "34341:34341"
    networks:
      - webapps
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  app1:
    restart: always
    build:
      context: ./app1
      target: development
    networks:
      - webapps
    volumes:
      - ./app1:/home/node/app
      - /home/node/app/node_modules/
    depends_on:
      - nginx
      - api
  app2:
    restart: always
    build:
      context: ./app2
      target: development
    networks:
      - webapps
    volumes:
      - ./app2:/home/node/app
      - /home/node/app/node_modules/
  api:
    restart: always
    build:
      context: ./api
      target: development
    environment:
      NODE_ENV: development
      DB_HOST: api_db
      DB_NAME: api_db
      DB_USER: api_user
      DB_PASSWORD: api_password
    networks:
      - webapps
      - api_db
    volumes:
      - ./api:/home/node/api
      - /home/node/api/node_modules
    depends_on:
      - nginx
      - api_db
  api_db:
    restart: always
    image: postgres:10.5-alpine
    environment:
      # Must set to non-default directory
      # See: https://github.com/docker-library/postgres/issues/404
      PGDATA: /var/lib/postgresql/local_data
      POSTGRES_DB: api_db
      POSTGRES_USER: api_user
      POSTGRES_PASSWORD: api_password
    networks:
      - api_db
    volumes:
      # Mount all database files locally
      - ./api_db/postgresql:/var/lib/postgresql
networks:
  webapps:
    # All containers on the same named network can talk to one another
    driver: bridge
  api_db:
    driver: bridge
    internal: true # remove if you want to interact with database directly
